// <auto-generated />
using DataAnnotation.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BasicSeeding.Migrations
{
    [DbContext(typeof(EFCoreDbContext))]
    [Migration("20250824094109_Mg1")]
    partial class Mg1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BasicSeeding.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CityId"));

                    b.Property<string>("CityName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("StateId")
                        .HasColumnType("int");

                    b.HasKey("CityId");

                    b.HasIndex("StateId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            CityName = "Nyeri Town",
                            StateId = 1
                        },
                        new
                        {
                            CityId = 2,
                            CityName = "Karatina Town",
                            StateId = 1
                        },
                        new
                        {
                            CityId = 3,
                            CityName = "Kutus",
                            StateId = 2
                        },
                        new
                        {
                            CityId = 4,
                            CityName = "Kerugoya",
                            StateId = 2
                        },
                        new
                        {
                            CityId = 5,
                            CityName = "Kampala City",
                            StateId = 3
                        });
                });

            modelBuilder.Entity("BasicSeeding.Models.Country", b =>
                {
                    b.Property<int>("CountryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CountryId"));

                    b.Property<string>("CountryCode")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("CountryName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CountryId");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            CountryId = 1,
                            CountryCode = "KE",
                            CountryName = "Kenya"
                        },
                        new
                        {
                            CountryId = 2,
                            CountryCode = "UG",
                            CountryName = "Uganda"
                        });
                });

            modelBuilder.Entity("BasicSeeding.Models.State", b =>
                {
                    b.Property<int>("StateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StateId"));

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<string>("StateName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StateId");

                    b.HasIndex("CountryId");

                    b.ToTable("States");

                    b.HasData(
                        new
                        {
                            StateId = 1,
                            CountryId = 1,
                            StateName = "Nyeri"
                        },
                        new
                        {
                            StateId = 2,
                            CountryId = 1,
                            StateName = "Kirinyaga"
                        },
                        new
                        {
                            StateId = 3,
                            CountryId = 2,
                            StateName = "Kampala"
                        });
                });

            modelBuilder.Entity("BasicSeeding.Models.City", b =>
                {
                    b.HasOne("BasicSeeding.Models.State", "State")
                        .WithMany("Cities")
                        .HasForeignKey("StateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("State");
                });

            modelBuilder.Entity("BasicSeeding.Models.State", b =>
                {
                    b.HasOne("BasicSeeding.Models.Country", "country")
                        .WithMany("States")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("country");
                });

            modelBuilder.Entity("BasicSeeding.Models.Country", b =>
                {
                    b.Navigation("States");
                });

            modelBuilder.Entity("BasicSeeding.Models.State", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
